I"Ù<p>An implementation of weak typing for C++11 and Arduino.</p>

<p>Thanks to <a href="https://github.com/foonathan">Foo Nathan</a> for inspiration on variant implementation from his typesafe library. The type tracking internals of this library are largely based on his implementation, with some modifications to make things run in C++11/Arduino and to properly override operators to create the operator behavior you would expect from the underlying type.</p>

<p><a href="">Github</a></p>

<h2 id="usage">Usage</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">using</span> <span class="n">var</span> <span class="o">=</span> <span class="n">weak</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">float</span><span class="p">,</span> <span class="kt">double</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span><span class="p">;</span>
  
  <span class="n">var</span> <span class="n">myInt</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="n">var</span> <span class="n">myDouble</span> <span class="o">=</span> <span class="mf">14.2</span><span class="p">;</span>
  <span class="n">var</span> <span class="n">myFloat</span> <span class="o">=</span> <span class="mf">1.3</span><span class="n">f</span><span class="p">;</span>
  <span class="n">var</span> <span class="n">myString</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"Hello World"</span><span class="p">);</span>
  
  <span class="n">var</span> <span class="n">a</span> <span class="o">=</span> <span class="n">myInt</span> <span class="o">+</span> <span class="n">myDouble</span> <span class="o">*</span> <span class="n">myFloat</span><span class="p">;</span>
  
</code></pre></div></div>

:ET